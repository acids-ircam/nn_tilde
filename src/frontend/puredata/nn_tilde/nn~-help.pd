#N canvas 348 25 983 839 12;
#X obj 10 51 cnv 1 960 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 22 18 nn~;
#X text 59 18 - real-time ai audio processing;
#X obj 574 67 bng 19 250 50 0 \$0-browse-vschaos2 empty IRCAM\ vschaos2\ models 24 9 0 12 #fcfcfc #000000 #000000;
#X obj 768 92 bng 19 250 50 0 \$0-browse-rave-iil empty iiL\ RAVE\ models 24 9 0 12 #fcfcfc #000000 #000000;
#X obj 574 92 bng 19 250 50 0 \$0-browse-rave empty IRCAM\ RAVE\ models 24 9 0 12 #fcfcfc #000000 #000000;
#N canvas 38 607 670 504 guts 0;
#X obj 57 272 pdcontrol;
#X msg 60 162 browse https://acids-ircam.github.io/rave_models_download;
#X msg 60 222 browse https://www.dropbox.com/sh/avdeiza7c6bn2of/AAAGZsnRo9ZVMa0iFhouCBL-a?dl=0, f 80;
#X obj 60 198 r \$0-browse-vschaos2;
#X obj 60 138 r \$0-browse-rave-ircam;
#X obj 61 73 r \$0-browse-rave-iil;
#X msg 61 98 browse https://huggingface.co/Intelligent-Instruments-Lab/rave-models, f 69;
#X obj 84 335 loadbang;
#X msg 84 359 0;
#X obj 84 383 s \$0-enable;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X restore 901 800 pd guts;
#X msg 24 659 gpu \$1;
#X obj 24 635 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 552 621 <-- latent space;
#X obj 419 549 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 498 252 tgl 19 0 \$0-enable empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 394 540 10;
#X text 401 621 0;
#X text 387 703 -10;
#X obj 454 549 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 489 549 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 524 549 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 419 276 noise~;
#X obj 498 300 f;
#X obj 498 348 mtof;
#X obj 419 800 dac~;
#X obj 498 372 lop~ 12;
#X obj 576 378 +~ 3;
#X obj 419 397 bob~;
#X obj 576 354 *~ 3;
#X msg 437 300 1 \, 0 60;
#X obj 437 324 line~;
#X obj 419 373 *~;
#X obj 437 348 pow~ 2;
#X obj 528 300 + 4;
#X obj 498 324 + 50;
#X obj 558 300 mod 41;
#X obj 576 330 osc~ 7;
#X text 21 65 At its core \, nn~ is a translation layer between Pure Data and the libtorch C++ interface for deep learning. Alone \, nn~ is like an empty shell \, and requires pretrained models to operate. You can find a few models here:, f 74;
#X obj 697 378 dac~;
#X text 21 297 optional leading flags:;
#X obj 24 800 s \$0-nn;
#X msg 24 752 bufsize 0;
#X msg 24 728 bufsize 4096;
#X text 120 727 <-- default;
#X obj 498 276 metro 150;
#X text 25 238 3rd :;
#X text 25 203 2nd :;
#X text 68 203 <method> - optional \, defaults to "forward", f 21;
#X text 25 183 1st :;
#X text 69 183 <model_path>;
#X obj 267 635 tgl 19 0 empty \$0-enable empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 267 659 enable \$1;
#X obj 697 252 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 25 326 -m :;
#X text 65 326 activate multichannel mode (in- and output signal for all methods combined in 1 inlet and 1 outlet), f 33;
#X text 25 374 -g :;
#X text 64 374 activate GPU mode (if available);
#X text 25 395 -d :;
#X text 64 395 initialize in disabled state;
#X msg 24 473 load nasa;
#X obj 613 444 r \$0-nn;
#X obj 614 737 r \$0-nn;
#X text 100 472 <-- dynamically load another model;
#X obj 419 732 snake~ in 4;
#X obj 24 683 s \$0-nn;
#X obj 267 683 s \$0-nn;
#X obj 24 497 s \$0-nn;
#X obj 719 313 osc~ 4;
#X obj 770 313 osc~ 5;
#X obj 821 313 osc~ 6;
#X obj 872 313 osc~ 7;
#X obj 605 800 print;
#X text 583 654 combining "encode" and "decode" objects like this without manipulation of the latent trajectory is similar to using the "forward" method., f 52;
#X text 413 223 timbre transfer;
#X text 695 223 decoder-only;
#X obj 267 800 s \$0-nn;
#X obj 267 775 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 264 725 bang to output state on info outlet, f 14;
#X text 22 151 CREATION ARGS:;
#X text 23 442 MESSAGES:;
#X text 68 238 <buffer size> - optional \, defaults to 4096 0 sets no-thread-mode \, resulting in lower latency, f 34;
#X text 650 800 <-- check info log on bang;
#X msg 24 542 reload;
#X msg 24 566 method forward;
#X obj 697 602 dac~;
#X obj 697 453 tgl 19 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#N canvas 237 262 668 332 snapshotall 0;
#X obj 49 158 snapshot~;
#X obj 139 158 snapshot~;
#X obj 230 158 snapshot~;
#X obj 323 158 snapshot~;
#X obj 49 182 outlet;
#X obj 139 182 outlet;
#X obj 230 182 outlet;
#X obj 323 182 outlet;
#X obj 49 44 inlet~;
#X obj 404 110 route enable;
#X obj 404 139 metro 25;
#X obj 404 86 r \$0-nn;
#X obj 49 101 snake~ out 4;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 8 0 12 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 10 0 3 0;
#X connect 10 0 1 0;
#X connect 10 0 0 0;
#X connect 11 0 9 0;
#X connect 12 0 0 0;
#X connect 12 1 1 0;
#X connect 12 2 2 0;
#X connect 12 3 3 0;
#X restore 419 509 pd snapshotall;
#X obj 419 463 nn~ -m -g percussion encode;
#X obj 419 756 nn~ -m -g percussion decode;
#X msg 24 590 set <attribute> <value>;
#X text 695 425 prior;
#X obj 697 338 nn~ -d -g percussion decode;
#X msg 697 276 enable \$1;
#X obj 697 534 nn~ -m -g;
#X obj 697 578 nn~ -m -g;
#X msg 771 545 load VCTK \, method decode \, bufsize 16384, f 25;
#X msg 697 501 enable \$1;
#X obj 771 477 sel 1;
#X obj 697 477 t f f;
#X text 73 542 reload model;
#X msg 24 776 bufsize 16384;
#X text 97 752 <-- no-thread-mode;
#X msg 771 501 load VCTK \, method prior \, bufsize 16384 \, 2, f 25;
#X text 197 584 see info log for attributes, f 14;
#X text 133 565 switch method (multichannel only);
#X text 80 651 activate if available (check Pd's CPU meter), f 22;
#X text 411 151 EXAMPLES (these require the percussion.ts and VCTK.ts models from the IRCAM RAVE collection above):, f 37;
#X connect 7 0 61 0;
#X connect 8 0 7 0;
#X connect 10 0 60 0;
#X connect 11 0 41 0;
#X connect 15 0 60 1;
#X connect 16 0 60 2;
#X connect 17 0 60 3;
#X connect 18 0 28 0;
#X connect 19 0 30 0;
#X connect 19 0 31 0;
#X connect 20 0 22 0;
#X connect 22 0 24 1;
#X connect 23 0 24 2;
#X connect 24 0 84 0;
#X connect 25 0 23 0;
#X connect 26 0 27 0;
#X connect 27 0 29 0;
#X connect 28 0 24 0;
#X connect 29 0 28 1;
#X connect 30 0 32 0;
#X connect 31 0 20 0;
#X connect 32 0 19 1;
#X connect 33 0 25 0;
#X connect 38 0 37 0;
#X connect 39 0 37 0;
#X connect 41 0 19 0;
#X connect 41 0 26 0;
#X connect 47 0 48 0;
#X connect 48 0 62 0;
#X connect 49 0 89 0;
#X connect 56 0 63 0;
#X connect 57 0 84 0;
#X connect 58 0 85 0;
#X connect 60 0 85 0;
#X connect 64 0 88 0;
#X connect 65 0 88 1;
#X connect 66 0 88 2;
#X connect 67 0 88 3;
#X connect 73 0 72 0;
#X connect 82 0 95 0;
#X connect 83 0 10 0;
#X connect 83 1 15 0;
#X connect 83 2 16 0;
#X connect 83 3 17 0;
#X connect 84 0 83 0;
#X connect 85 0 21 0;
#X connect 85 1 68 0;
#X connect 88 0 35 0;
#X connect 88 1 35 1;
#X connect 89 0 88 0;
#X connect 90 0 91 0;
#X connect 91 0 81 0;
#X connect 92 0 91 0;
#X connect 93 0 90 0;
#X connect 93 0 91 0;
#X connect 94 0 99 0;
#X connect 94 0 92 0;
#X connect 95 0 93 0;
#X connect 95 1 94 0;
#X connect 97 0 37 0;
#X connect 99 0 90 0;

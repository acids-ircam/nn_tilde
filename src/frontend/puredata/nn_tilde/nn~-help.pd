#N canvas 610 161 1123 815 12;
#X obj 10 51 cnv 1 830 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 22 18 nn~;
#X text 59 18 - real-time ai audio processing;
#N canvas 324 349 450 300 META 1;
#X restore 806 665 pd META;
#X text 377 193 creation args;
#X obj 567 69 bng 19 250 50 0 \$0-browse-vschaos2 empty vschaos2\ models 24 9 0 12 #fcfcfc #000000 #000000;
#X text 913 85 messages;
#X obj 567 97 bng 19 250 50 0 \$0-browse-rave-iil empty iiL\ RAVE\ models 24 9 0 12 #fcfcfc #000000 #000000;
#X obj 567 125 bng 19 250 50 0 \$0-browse-rave empty IRCAM\ RAVE\ models 24 9 0 12 #fcfcfc #000000 #000000;
#N canvas 121 146 744 645 guts 0;
#X obj 57 272 pdcontrol;
#X msg 90 162 browse https://acids-ircam.github.io/rave_models_download;
#X msg 90 222 browse https://www.dropbox.com/sh/avdeiza7c6bn2of/AAAGZsnRo9ZVMa0iFhouCBL-a?dl=0, f 80;
#X obj 90 198 r \$0-browse-vschaos2;
#X obj 90 138 r \$0-browse-rave-ircam;
#X obj 91 73 r \$0-browse-rave-iil;
#X msg 91 98 browse https://huggingface.co/Intelligent-Instruments-Lab/rave-models, f 69;
#X obj 110 341 loadbang;
#X msg 110 365 0;
#X obj 110 389 s \$0-enable;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X restore 808 703 pd guts;
#X msg 914 121 load percussion;
#X msg 914 320 gpu \$1;
#X obj 914 296 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 81 652 nn~ percussion.ts decode;
#X text 866 665 <-- FIXME;
#X obj 81 383 nn~ percussion.ts encode;
#X text 272 533 <-- latent space;
#X obj 81 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 419 617 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 995 292 tgl 19 0 empty \$0-enable empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 995 316 enable \$1;
#X obj 995 340 s \$0-nn;
#X obj 277 364 r \$0-nn;
#X obj 275 633 r \$0-nn;
#X obj 598 676 print;
#N canvas 237 262 668 332 snapshottolatentspace 0;
#X obj 49 158 snapshot~;
#X obj 139 158 snapshot~;
#X obj 230 158 snapshot~;
#X obj 323 158 snapshot~;
#X obj 49 182 outlet;
#X obj 139 182 outlet;
#X obj 230 182 outlet;
#X obj 323 182 outlet;
#X obj 49 134 inlet~;
#X obj 139 134 inlet~;
#X obj 230 134 inlet~;
#X obj 323 134 inlet~;
#X obj 404 139 metro 20;
#X obj 404 86 r \$0-nn;
#X obj 404 110 route enable;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 12 0 2 0;
#X connect 12 0 3 0;
#X connect 12 0 1 0;
#X connect 12 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 12 0;
#X restore 81 422 pd snapshottolatentspace;
#X text 56 456 10;
#X text 63 537 0;
#X text 49 619 -10;
#X obj 136 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 191 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 246 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 81 230 noise~;
#X obj 160 206 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 160 254 f;
#X obj 160 302 mtof;
#X obj 81 676 dac~;
#X obj 160 326 lop~ 12;
#X obj 238 333 +~ 3;
#X obj 81 352 bob~;
#X obj 238 309 *~ 3;
#X msg 99 254 1 \, 0 60;
#X obj 99 278 line~;
#X obj 81 327 *~;
#X obj 99 302 pow~ 2;
#X obj 190 254 + 4;
#X obj 160 278 + 50;
#X obj 220 254 mod 41;
#X obj 160 230 metro 120;
#X obj 238 285 osc~ 7;
#X text 82 726 timbre transfer;
#X text 424 726 decoder-only;
#X text 21 65 At its core \, nn~ is a translation layer between Pure Data and the libtorch C++ interface for deep learning. Alone \, nn~ is like an empty shell \, and requires pretrained models to operate. You can find a few models here:, f 74;
#X text 382 287 -d : start in disabled state;
#X obj 419 652 nn~ -m -g -d percussion.ts;
#X obj 419 676 dac~;
#X text 382 367 -m : activate multichannel mode;
#X text 382 387 -g : activate GPU mode (if available);
#X text 382 407 -d : start in disabled state;
#X text 378 334 optional leading flags:;
#X text 382 247 1 <model_path>;
#X text 382 267 2 <block size>;
#X obj 914 344 s \$0-nn;
#X obj 915 265 s \$0-nn;
#X msg 914 168 bufsize 0;
#X msg 914 192 bufsize 2048;
#X text 1010 217 default;
#X msg 914 216 bufsize 4096;
#X msg 914 240 bufsize 16384;
#X obj 249 682 print;
#X obj 302 596 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X connect 11 0 62 0;
#X connect 12 0 11 0;
#X connect 13 0 36 0;
#X connect 13 1 36 1;
#X connect 13 2 69 0;
#X connect 15 0 25 0;
#X connect 15 1 25 1;
#X connect 15 2 25 2;
#X connect 15 3 25 3;
#X connect 17 0 13 0;
#X connect 18 0 54 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 22 0 15 0;
#X connect 23 0 13 0;
#X connect 25 0 17 0;
#X connect 25 1 29 0;
#X connect 25 2 30 0;
#X connect 25 3 31 0;
#X connect 29 0 13 1;
#X connect 30 0 13 2;
#X connect 31 0 13 3;
#X connect 32 0 43 0;
#X connect 33 0 48 0;
#X connect 34 0 45 0;
#X connect 34 0 46 0;
#X connect 35 0 37 0;
#X connect 37 0 39 1;
#X connect 38 0 39 2;
#X connect 39 0 15 0;
#X connect 40 0 38 0;
#X connect 41 0 42 0;
#X connect 42 0 44 0;
#X connect 43 0 39 0;
#X connect 44 0 43 1;
#X connect 45 0 47 0;
#X connect 46 0 35 0;
#X connect 47 0 34 1;
#X connect 48 0 34 0;
#X connect 48 0 41 0;
#X connect 49 0 40 0;
#X connect 54 0 55 0;
#X connect 54 1 24 0;
#X connect 64 0 63 0;
#X connect 65 0 63 0;
#X connect 67 0 63 0;
#X connect 68 0 63 0;
#X connect 70 0 13 0;

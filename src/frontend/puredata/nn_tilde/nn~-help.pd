#N canvas 471 163 1123 815 12;
#X obj 750 355 *~;
#X obj 10 51 cnv 1 830 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 22 18 nn~;
#X text 50 18 - real-time ai audio processing;
#N canvas 324 349 450 300 META 1;
#X restore 806 665 pd META;
#X text 774 19 <= click;
#N canvas 603 156 718 338 reference 0;
#X obj 8 52 cnv 5 690 5 empty empty INLET: 8 18 0 13 #202020 #000000 0;
#X obj 8 236 cnv 2 690 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 7 312 cnv 5 690 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 8 273 cnv 2 690 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000 0;
#X text 290 286 NONE, f 6;
#X obj 28 20 pdcontrol;
#X text 77 65 browse <symbol> - open a URL given by the symbol., f 53;
#X text 49 85 dir <float \, symbol> -;
#X text 120 133 isvisible - outputs float to specify if patch is visible (1) or not (0)., f 80;
#X text 99 155 args <float> -;
#X text 204 84 output owning patch's directory. Optional float sets level (0 \, this patch \, 1 \, its owner \, and so on). Optional symbol sets a folder relative to the directory., f 68;
#X text 204 155 outputs patch's argument. Optional float sets level (0 \, this patch \, 1 \, its owner \, and so on)., f 68;
#X text 155 246 list - list of args \, dir symbol of visibility float.;
#X text 203 188 send a message to this canvas, f 68;
#X text 107 20 - get patch/window information or communicate to canvas.;
#X text 36 189 sendcanvas <anything> -;
#X restore 680 18 pd reference;
#X text 724 188 creation args;
#X obj 259 107 bng 19 250 50 0 \$0-browse-vschaos2 empty vschaos2\ models 24 9 0 12 #fcfcfc #000000 #000000;
#X text 472 168 messages;
#X text 330 225 flags;
#X text 620 159 example;
#X obj 260 138 bng 19 250 50 0 \$0-browse-rave-iil empty iiL\ RAVE\ models 24 9 0 12 #fcfcfc #000000 #000000;
#X obj 260 168 bng 19 250 50 0 \$0-browse-rave empty IRCAM\ RAVE\ models 24 9 0 12 #fcfcfc #000000 #000000;
#N canvas 121 146 744 645 guts 0;
#X obj 57 272 pdcontrol;
#X msg 90 162 browse https://acids-ircam.github.io/rave_models_download;
#X msg 90 222 browse https://www.dropbox.com/sh/avdeiza7c6bn2of/AAAGZsnRo9ZVMa0iFhouCBL-a?dl=0, f 80;
#X obj 90 198 r \$0-browse-vschaos2;
#X obj 90 138 r \$0-browse-rave-ircam;
#X obj 91 73 r \$0-browse-rave-iil;
#X msg 91 98 browse https://huggingface.co/Intelligent-Instruments-Lab/rave-models, f 69;
#X obj 110 341 loadbang;
#X msg 110 365 0;
#X obj 110 389 s \$0-enable;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X restore 799 700 pd guts;
#X msg 493 224 load percussion;
#X msg 685 248 gpu \$1;
#X obj 685 224 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 496 271 bufsize 0;
#X msg 496 295 bufsize 2048;
#X text 592 320 default;
#X msg 496 319 bufsize 4096;
#X msg 496 343 bufsize 8192;
#X msg 790 390 load percussion;
#X obj 81 652 nn~ percussion.ts decode;
#X text 866 665 <-- FIXME;
#X text 22 65 At its core \, nn~ is a translation layer between PureData and the libtorch c++ interface for deep learning. Alone \, nn~ is like an empty shell \, and requires pretrained models to operate. You can find a few models here:, f 94;
#X obj 81 383 nn~ percussion.ts encode;
#X text 272 533 <-- latent space;
#X obj 81 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 762 423 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 366 272 tgl 19 0 empty \$0-enable empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 366 296 enable \$1;
#X obj 366 320 s \$0-nn;
#X obj 277 364 r \$0-nn;
#X obj 275 633 r \$0-nn;
#X obj 920 486 print;
#X obj 939 443 r \$0-nn;
#N canvas 237 262 668 332 snapshottolatentspace 0;
#X obj 49 158 snapshot~;
#X obj 139 158 snapshot~;
#X obj 230 158 snapshot~;
#X obj 323 158 snapshot~;
#X obj 49 182 outlet;
#X obj 139 182 outlet;
#X obj 230 182 outlet;
#X obj 323 182 outlet;
#X obj 49 134 inlet~;
#X obj 139 134 inlet~;
#X obj 230 134 inlet~;
#X obj 323 134 inlet~;
#X obj 404 139 metro 20;
#X obj 404 86 r \$0-nn;
#X obj 404 110 route enable;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 12 0 2 0;
#X connect 12 0 3 0;
#X connect 12 0 1 0;
#X connect 12 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 12 0;
#X restore 81 422 pd snapshottolatentspace;
#X text 56 456 10;
#X text 63 537 0;
#X text 49 619 -10;
#X obj 136 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 191 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 246 465 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 81 230 noise~;
#X obj 160 206 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 160 254 f;
#X obj 160 302 mtof;
#X obj 81 676 dac~;
#X obj 160 326 lop~ 12;
#X obj 238 333 +~ 3;
#X obj 81 352 bob~;
#X obj 238 309 *~ 3;
#X msg 99 254 1 \, 0 60;
#X obj 99 278 line~;
#X obj 81 327 *~;
#X obj 99 302 pow~ 2;
#X obj 190 254 + 4;
#X obj 160 278 + 50;
#X obj 220 254 mod 41;
#X obj 160 230 metro 120;
#X obj 238 285 osc~ 7;
#X obj 421 662 nn~ percussion.ts decode;
#X obj 421 475 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 615 643 r \$0-nn;
#N canvas 237 262 668 332 snapshottolatentspace 0;
#X obj 49 158 snapshot~;
#X obj 139 158 snapshot~;
#X obj 230 158 snapshot~;
#X obj 323 158 snapshot~;
#X obj 49 182 outlet;
#X obj 139 182 outlet;
#X obj 230 182 outlet;
#X obj 323 182 outlet;
#X obj 49 134 inlet~;
#X obj 139 134 inlet~;
#X obj 230 134 inlet~;
#X obj 323 134 inlet~;
#X obj 404 139 metro 20;
#X obj 404 86 r \$0-nn;
#X obj 404 110 route enable;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 8 0 0 0;
#X connect 9 0 1 0;
#X connect 10 0 2 0;
#X connect 11 0 3 0;
#X connect 12 0 2 0;
#X connect 12 0 3 0;
#X connect 12 0 1 0;
#X connect 12 0 0 0;
#X connect 13 0 14 0;
#X connect 14 0 12 0;
#X restore 421 432 pd snapshottolatentspace;
#X text 396 466 10;
#X text 403 547 0;
#X text 389 629 -10;
#X obj 476 475 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 531 475 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 586 475 vsl 19 162 -10 10 0 0 empty empty empty 0 -9 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 421 686 dac~;
#X text 82 726 timbre transfer;
#X text 424 726 decoder-only;
#X obj 762 462 nn~ -m -g percussion.ts;
#X connect 17 0 16 0;
#X connect 24 0 49 0;
#X connect 24 1 49 1;
#X connect 27 0 38 0;
#X connect 27 1 38 1;
#X connect 27 2 38 2;
#X connect 27 3 38 3;
#X connect 29 0 24 0;
#X connect 30 0 76 0;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 34 0 27 0;
#X connect 35 0 24 0;
#X connect 37 0 76 0;
#X connect 38 0 29 0;
#X connect 38 1 42 0;
#X connect 38 2 43 0;
#X connect 38 3 44 0;
#X connect 42 0 24 1;
#X connect 43 0 24 2;
#X connect 44 0 24 3;
#X connect 45 0 56 0;
#X connect 46 0 61 0;
#X connect 47 0 58 0;
#X connect 47 0 59 0;
#X connect 48 0 50 0;
#X connect 50 0 52 1;
#X connect 51 0 52 2;
#X connect 52 0 27 0;
#X connect 53 0 51 0;
#X connect 54 0 55 0;
#X connect 55 0 57 0;
#X connect 56 0 52 0;
#X connect 57 0 56 1;
#X connect 58 0 60 0;
#X connect 59 0 48 0;
#X connect 60 0 47 1;
#X connect 61 0 47 0;
#X connect 61 0 54 0;
#X connect 62 0 53 0;
#X connect 63 0 73 0;
#X connect 63 1 73 1;
#X connect 64 0 63 0;
#X connect 65 0 63 0;
#X connect 66 0 64 0;
#X connect 66 1 70 0;
#X connect 66 2 71 0;
#X connect 66 3 72 0;
#X connect 70 0 63 1;
#X connect 71 0 63 2;
#X connect 72 0 63 3;
#X connect 76 1 36 0;
